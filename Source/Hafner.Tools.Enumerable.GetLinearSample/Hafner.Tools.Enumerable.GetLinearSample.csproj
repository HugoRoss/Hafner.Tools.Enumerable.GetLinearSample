<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <!-- Possible target framework monikers (TFMs) include: -->
    <!-- Core: net9.0, net8.0, net7.0, net6.0, net5.0, netcoreapp3.1, netcoreapp3.0, netcoreapp2.2, netcoreapp2.1, netcoreapp2.0, netcoreapp1.1, netcoreapp1.0 -->
    <!-- Standard: netstandard2.1, netstandard2.0, netstandard1.6, netstandard1.5, netstandard1.4, netstandard1.3, netstandard1.2, netstandard1.1, netstandard1.0 -->
    <!-- Framework: net481, net48, net472, net471, net47, net462, net461, net46, net452, net451, net45, net403, net40, net35, net20, net11 -->
    <TargetFrameworks>net9.0;net8.0;net7.0;net6.0;net5.0;netcoreapp3.1;netcoreapp3.0;netcoreapp2.2;netcoreapp2.1;netcoreapp2.0;netcoreapp1.1;netcoreapp1.0;netstandard2.1;netstandard2.0;netstandard1.6;netstandard1.5;netstandard1.4;netstandard1.3;netstandard1.2;netstandard1.1;netstandard1.0;net481;net48;net472;net471;net47;net462;net461;net46;net452;net451;net45;net403;net40;net35;net30;net20</TargetFrameworks>
    <!-- The according precompiler symbols are: -->
    <!-- Core: NET5_0, NETCOREAPP, NETCOREAPP3_1, NETCOREAPP3_0, NETCOREAPP2_2, NETCOREAPP2_1, NETCOREAPP2_0, NETCOREAPP1_1, NETCOREAPP1_0 -->
    <!-- Standard: NETSTANDARD, NETSTANDARD2_1, NETSTANDARD2_0, NETSTANDARD1_6, NETSTANDARD1_5, NETSTANDARD1_4, NETSTANDARD1_3, NETSTANDARD1_2, NETSTANDARD1_1, NETSTANDARD1_0 -->
    <!-- Framework: NETFRAMEWORK, NET48, NET472, NET471, NET47, NET462, NET461, NET46, NET452, NET451, NET45, NET40, NET35, NET20 -->
    <FrameworksTemplate>|net20|net30|net35|net40|net403|net45|net451|net452|net46|net461|net462|net47|net471|net472|net48|net41|netcoreapp1.0|netcoreapp1.1|netcoreapp2.0|netcoreapp2.1|netcoreapp2.2|netcoreapp3.0|netcoreapp3.1|net5.0|net6.0|net7.0|net8.0|net9.0|netstandard1.0|netstandard1.1|netstandard1.2|netstandard1.3|netstandard1.4|netstandard1.5|netstandard1.6|netstandard2.0|netstandard2.1|</FrameworksTemplate>
    <FrameworksSupportingTrimming>|net6.0|net7.0|net8.0|net9.0|</FrameworksSupportingTrimming>
    <FrameworksLackingExtensionAttribute>|net20|net30|</FrameworksLackingExtensionAttribute>
    <Configurations>Debug;Release;NuGet</Configurations>
    <ConfigurationsThatPublish>|NuGet|</ConfigurationsThatPublish>
    <OutputType>Library</OutputType>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <NeutralLanguage>en-US</NeutralLanguage>
    <LangVersion>Latest</LangVersion>
    <Nullable>enable</Nullable>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <EnableTrimAnalyzer>true</EnableTrimAnalyzer>
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <SuppressTfmSupportBuildWarnings>true</SuppressTfmSupportBuildWarnings>
    <CheckNotRecommendedTargetFramework>false</CheckNotRecommendedTargetFramework>
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
    <NoWarn></NoWarn>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <Authors>Christoph Hafner</Authors>
    <Company>Hafner</Company>
    <PackageTags>GetLinearSample, Linear Sample, Sample, GetSample, IEnumerable, IList, Extension Method</PackageTags>
    <!-- Set <major>.<minor>.<patch>.0 for the package version according to the following logic: -->
    <!--    1.2.3.0  =>  1.2.4.0  if no interface changes have been performed (patch, bug-fix) -->
    <!--    1.2.3.0  =>  1.3.0.0  if new interfaces have been added (feature release) -->
    <!--    1.2.3.0  =>  2.0.0.0  if existing interfaces have been modified (breaking changes) -->
    <Version>1.0.3.0</Version>
    <!-- Set to <major>.<minor>.0.0 (or <major>.<minor>.<patch>.0) of the <Version> element -->
    <AssemblyVersion>1.0.3.0</AssemblyVersion>
    <!-- Set to <major>.<minor>.<patch>.0 of the <Version> element -->
    <FileVersion>1.0.3.0</FileVersion>
    <RootNamespace>Hafner.Tools</RootNamespace>
    <Copyright>Copyright (C) 2025 by Christoph Hafner</Copyright>
    <PackageIcon>metadata\Icon.png</PackageIcon>
    <Description>
      Package "Hafner.Tools.Enumerable.GetLinearSample" contains an extension method for an IEnumerable&lt;T&gt; that returns a linear sample
      of the desired number of elements from the collection (or less if the collection does not contain that many elements). Always the first and the last elements
      are returned and evenly spaced elements in between. Edge cases:

      <li /> If a negative number of samples is requested, an ArgumentOutOfRangeException is thrown.
      <li /> If the source list has less elements than samples requested, all elements are returned.
      <li /> If the source list is null, an empty List&lt;T&gt; is returned.
      <li /> If 0 samples are requested, an empty List&lt;T&gt; is returned.
      <li /> If 1 sample is requested, the first element is returned.
      <li /> If 2 samples are requested, the first and the last elements are returned.

      Assuming a collection contains 100 elements, a call to `collection.GetLinearSample(10)` would return a new List&lt;T&gt; containing the elements at index 0, 11, 22, 33, 44, 55, 66, 77, 88 and 99.

      This package supports <br />
      <li /> .NET framework versions 2.0, 3.0, 3.5, 4.0, 4.0.3, 4.5, 4.5.1, 4.5.2, 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1, 4.7.2, 4.8, 4.8.1<br />
      <li /> .NET core versions 1.0, 1.1, 2.0, 2.1, 2.2, 3.0, 3.1, 5.0, 6.0, 7.0, 8.0, 9.0<br />
      <li /> .NET standard versions 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 2.0, 2.1<br />

    </Description>
    <PackageReleaseNotes>RootNamespace fixed.</PackageReleaseNotes>
  </PropertyGroup>
  <PropertyGroup Condition="$(FrameworksSupportingTrimming.Contains('|$(TargetFramework)|'))">
    <PublishTrimmed>true</PublishTrimmed>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
  </PropertyGroup>
  <PropertyGroup Condition="$(ConfigurationsThatPublish.Contains('|$(Configuration)|'))">
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageReadmeFile>metadata\ReadMe.md</PackageReadmeFile>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>$(DefineConstants)</DefineConstants>
  </PropertyGroup>
  <ItemGroup Condition="$(FrameworksLackingExtensionAttribute.Contains('|$(TargetFramework)|'))">
    <PackageReference Include="Hafner.Compatibility.ExtensionAttribute" Version="3.0.3" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Update="Microsoft.NETCore.App">
      <NoWarn>NU1903;NU1902</NoWarn>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="..\..\BuildTools\Resources\PackageReadMe.md" Pack="true" PackagePath="metadata\ReadMe.md" Visible="true" />
    <None Include="..\..\BuildTools\Resources\PackageIcon.png" Pack="true" PackagePath="metadata\Icon.png" Visible="false" />
  </ItemGroup>
  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="@ECHO OFF&#xD;&#xA;CALL &quot;$(ProjectDir)BuildEvents\PreBuild.bat&quot; &quot;$(ConfigurationName)&quot; &quot;$(TargetFramework)&quot;&#xD;&#xA;" />
  </Target>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="@ECHO OFF&#xD;&#xA;CALL &quot;$(ProjectDir)BuildEvents\PostBuild.bat&quot; &quot;$(ConfigurationName)&quot; &quot;$(TargetFramework)&quot;&#xD;&#xA;" />
  </Target>
  <Target Name="PostPackaging" AfterTargets="Pack" Condition="'$(Configuration)' == 'NuGet'">
    <Exec Command="@ECHO OFF&#xD;&#xA;CALL &quot;$(ProjectDir)BuildEvents\PostPackage.bat&quot; &quot;NuGet&quot;&#xD;&#xA;" />
  </Target>
</Project>
